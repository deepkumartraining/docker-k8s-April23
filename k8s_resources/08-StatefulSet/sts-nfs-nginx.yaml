# Creating PV
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv-share0
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
   - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  mountOptions:
    - hard
    #- nfsvers=4.1
  nfs:
    path: /var/nfs/nfsdata0
    server: 10.128.0.6
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv-share1
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
   - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  mountOptions:
    - hard
    #- nfsvers=4.1
  nfs:
    path: /var/nfs/nfsdata1
    server: 10.128.0.6

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv-share2
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
   - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  mountOptions:
    - hard
    #- nfsvers=4.1
  nfs:
    path: /var/nfs/nfsdata2
    server: 10.128.0.6
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv-share3
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
   - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  mountOptions:
    - hard
    #- nfsvers=4.1
  nfs:
    path: /var/nfs/nfsdata3
    server: 10.128.0.6
#Nginx deployment with statefulset
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nginx-statefulset
spec:
  selector:
    matchLabels:
      name: nginx-statefulset
  serviceName: nginx-statefulset
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx-statefulset
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx-statefulset
        image: nginx
        ports:
        - containerPort: 80
          name: "web"
        volumeMounts:
        - name: db-data
          mountPath: /var/www
  volumeClaimTemplates:
  - metadata:
      name: db-data
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: ""
      resources:
        requests:
          storage: 1Gi
---
#Service creation
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
  - port: 80
    targetPort: 80
    name: web
  clusterIP: None
  selector:
    app: nginx